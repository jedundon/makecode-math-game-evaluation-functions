<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="bYG^VO])4sfr?BORx=dM" x="0" y="0"></block><block type="typescript_statement" id="wB0T(afSMTj2HZl/b4@m" disabled="true" editable="false" x="2200" y="600"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function collapseArrayDigitsToNumbers3(array: string[]): string[] {" line1="    " line2="    temp_string = &quot;&quot;" line3="    temp_array = []" line4="    let index2 = 0" line5="    while (index2 &lt;= array.length - 1) {" line6="        if (symbols.indexOf(array[index2]) &gt;= 0) {" line7="            if (!temp_string.isEmpty()) {" line8="                temp_array.push(temp_string)" line9="                temp_string = &quot;&quot;" line10="            }" line11="            " line12="            temp_array.push(array[index2])" line13="        } else {" line14="            temp_string = &quot;&quot; + temp_string + convertToText(array[index2])" line15="        }" line16="        " line17="        index2 += 1" line18="    }" line19="    if (!temp_string.isEmpty()) {" line20="        temp_array.push(temp_string)" line21="        temp_string = &quot;&quot;" line22="    }" line23="    " line24="    return temp_array" line25="}" numlines="26"></mutation><next><block type="typescript_statement" id="oyO1g8bDbn7q(sEx,g4[" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function collapseArrayDigitsToNumbers2(array2: string[]): string[] {" line1="    " line2="    temp_string = &quot;&quot;" line3="    temp_array = []" line4="    let index22 = 0" line5="    while (index22 &lt;= array2.length - 1) {" line6="        if (symbols.indexOf(array2[index22]) &gt;= 0) {" line7="            if (!temp_string.isEmpty()) {" line8="                temp_array.push(temp_string)" line9="                temp_string = &quot;&quot;" line10="            }" line11="            " line12="            temp_array.push(array2[index22])" line13="        } else {" line14="            temp_string = &quot;&quot; + temp_string + convertToText(array2[index22])" line15="        }" line16="        " line17="        index22 += 1" line18="    }" line19="    if (!temp_string.isEmpty()) {" line20="        temp_array.push(temp_string)" line21="        temp_string = &quot;&quot;" line22="    }" line23="    " line24="    return temp_array" line25="}" numlines="26"></mutation><next><block type="typescript_statement" id="vfZ9aOG.sjid33+c)dm/" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function collapseArrayDigitsToNumbers(array3: string[]): string[] {" line1="    " line2="    temp_string = &quot;&quot;" line3="    temp_array = []" line4="    let index222 = 0" line5="    while (index222 &lt;= array3.length - 1) {" line6="        if (symbols.indexOf(array3[index222]) &gt;= 0) {" line7="            if (!temp_string.isEmpty()) {" line8="                temp_array.push(temp_string)" line9="                temp_string = &quot;&quot;" line10="            }" line11="            " line12="            temp_array.push(array3[index222])" line13="        } else {" line14="            temp_string = &quot;&quot; + temp_string + convertToText(array3[index222])" line15="        }" line16="        " line17="        index222 += 1" line18="    }" line19="    if (!temp_string.isEmpty()) {" line20="        temp_array.push(temp_string)" line21="        temp_string = &quot;&quot;" line22="    }" line23="    " line24="    return temp_array" line25="}" numlines="26"></mutation></block></next></block></next></block><block type="typescript_expression" id="0wQ`*8X[|bSd+Cn-E61X" disabled="true" editable="false" x="240" y="1060"><field name="EXPRESSION">evaluateArrayMath(collapseArrayDigitsToNumbers(text_list))</field></block><block type="typescript_statement" id="j?d0BaVI@.Xs7sv^1k+Y" disabled="true" editable="false" x="-220" y="1160"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let clone : string[] = []" numlines="1" declaredvars="clone"></mutation><next><block type="typescript_statement" id="]IDq=Rqw*.ao_EsNdLa@" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let num2 = &quot;&quot;" numlines="1" declaredvars="num2"></mutation><next><block type="typescript_statement" id="J+]Njj^ikN8gNu^ElWwe" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let s = &quot;&quot;" numlines="1" declaredvars="s"></mutation><next><block type="typescript_statement" id="o@.{;*M19ZFmM(J~D5`_" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let num1 = &quot;&quot;" numlines="1" declaredvars="num1"></mutation><next><block type="typescript_statement" id="F@Z?o*uo%|WsONW4xlG8" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let output_array : string[] = []" numlines="1" declaredvars="output_array"></mutation><next><block type="typescript_statement" id="#qpO,uDF}@)y0Sc+n4=h" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let temp_array : string[] = []" numlines="1" declaredvars="temp_array"></mutation><next><block type="typescript_statement" id="nN~(884MTEs=NGUfKM2E" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let temp_string = &quot;&quot;" numlines="1" declaredvars="temp_string"></mutation><next><block type="typescript_statement" id="7E_:*+c{{4dqdy*qqmMK" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let symbols : string[] = []" numlines="1" declaredvars="symbols"></mutation><next><block type="typescript_statement" id="K:rPG~k3@D3A8XF8t{aX" disabled="true" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function convertArrayToString(array4: string[]): string {" line1="    " line2="    temp_string = &quot;&quot;" line3="    let index3 = 0" line4="    while (index3 &lt;= array4.length - 1) {" line5="        temp_string = &quot;&quot; + temp_string + convertToText(array4[index3])" line6="        index3 += 1" line7="    }" line8="    return temp_string" line9="}" numlines="10"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type="text" id="z*z}WX8nK]E?WZe,[Ku0" disabled="true" x="1624" y="1253"><field name="TEXT"></field></block><block type="argument_reporter_array" id="s~r5HA8|xDC(v@/T~Y-C" disabled="true" x="1081" y="1561"><field name="VALUE">arr</field></block><block type="typescript_statement" id="7TLX)_:qD6Tw]lC8{(bi" disabled="true" editable="false" x="920" y="2040"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function evaluateArraySymbolIndex(arr: string[], symindex: number): string[] {" line1="    " line2="    output_array = cloneArray(arr)" line3="    temp_array = []" line4="    let index2222 = 0" line5="    while (index2222 &lt;= symindex - 2) {" line6="        temp_array.push(output_array.shift())" line7="        index2222 += 1" line8="    }" line9="    num1 = output_array.shift()" line10="    s = output_array.shift()" line11="    num2 = output_array.shift()" line12="    temp_array.push(convertToText(evaluateMath(num1, s, num2)))" line13="    for (let value of output_array) {" line14="        temp_array.push(value)" line15="    }" line16="    return temp_array" line17="}" numlines="18"></mutation></block><block type="typescript_statement" id="{doX%exZjU+mDd7Hf-G=" disabled="true" editable="false" x="640" y="2160"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function evaluateArrayMath(array5: string[]): string[] {" line1="    " line2="    output_array = cloneArray(array5)" line3="    while (lowest_positive_number(output_array.indexOf(&quot;/&quot;), output_array.indexOf(&quot;*&quot;)) &gt;= 0) {" line4="        output_array = evaluateArraySymbolIndex(output_array, lowest_positive_number(output_array.indexOf(&quot;/&quot;), output_array.indexOf(&quot;*&quot;)))" line5="    }" line6="    while (lowest_positive_number(output_array.indexOf(&quot;-&quot;), output_array.indexOf(&quot;+&quot;)) &gt;= 0) {" line7="        output_array = evaluateArraySymbolIndex(output_array, lowest_positive_number(output_array.indexOf(&quot;/&quot;), output_array.indexOf(&quot;*&quot;)))" line8="    }" line9="    return output_array" line10="}" numlines="11"></mutation></block><block type="typescript_statement" id="?Q{RTHN{uSd7@Y.dgx(8" disabled="true" editable="false" x="820" y="2880"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function cloneArray(array6: string[]): string[] {" line1="    " line2="    clone = []" line3="    for (let value2 of array6) {" line4="        clone.push(value2)" line5="    }" line6="    return clone" line7="}" numlines="8"></mutation></block></xml>